@model _5051.Models.FactoryInventoryModel
@{
    ViewBag.Title = "Create";
}

<br />
<div class="row justify-content-center">

    <div class="col-1 "></div>
    <div class="col lightTransparentBox">
        <br />
        <div class="FontSizeLarge text-center">
            <span class="FontSizeLarger FontBold FontColorWhite">
                Create Shop Inventory Item
            </span>
        </div>
        <br />
    </div>
    <div class="col-1"></div>
</div>

<div class="row">
    <br />
    <br />
</div>

@{
    if (Model == null)
    {
        <div class="row justify-content-center">

            <div class="col-1 "></div>
            <div class="col lightTransparentBox">
                <br />
                <div class="FontSizeLarge text-center FontColorWhite">
                    No Factory Inventory Items
                </div>
                <br />
            </div>
            <div class="col-1"></div>
        </div>
    }
    else
    {
        <div class="row justify-content-around FontColorWhite">

            <div class="col-1 "></div>
            <div class="col lightTransparentBox FontSizeMedium text-center">
                <br />

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)

                    <div class="row justify-content-center">
                        <div class="col-sm text-sm-center text-md-right" id="studentName">
                            @Html.DisplayNameFor(m => m.Name)
                        </div>
                        <div class="col-1">
                        </div>
                        <div class="col-sm text-left" id="studentValue">
                            @Html.EditorFor(m => m.Name)
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <div class="col-sm text-sm-center text-md-right" id="tokensName">
                            @Html.DisplayNameFor(m => m.Description)
                        </div>
                        <div class="col-1">

                        </div>
                        <div class="col-sm text-left" id="tokensValue">
                            @Html.EditorFor(m => m.Description)
                            @Html.ValidationMessageFor(m => m.Description)
                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <div class="col-sm text-sm-center text-md-right" id="xpName">
                            @Html.DisplayNameFor(m => m.Uri)
                        </div>
                        <div class="col-1">

                        </div>
                        <div class="col-sm text-left" id="xpValue">
                            @Html.EditorFor(m => m.Uri)
                            @Html.ValidationMessageFor(m => m.Uri)

                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <div class="col-sm text-sm-center text-md-right" id="xpName">
                            @Html.DisplayNameFor(m => m.Category)
                        </div>
                        <div class="col-1">

                        </div>
                        <div class="col-sm text-left" id="xpValue">
                            @Html.EnumDropDownListFor(m => m.Category)
                            @Html.ValidationMessageFor(m => m.Category)
                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <div class="col-sm text-sm-center text-md-right" id="xpName">
                            @Html.DisplayNameFor(m => m.Tokens)
                        </div>
                        <div class="col-1">

                        </div>
                        <div class="col-sm text-left" id="xpValue">
                            @Html.EditorFor(m => m.Tokens)
                            @Html.ValidationMessageFor(m => m.Tokens)
                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <div class="col-sm text-sm-center text-md-right" id="xpName">
                            @Html.DisplayNameFor(m => m.Quantities)
                        </div>
                        <div class="col-1">

                        </div>
                        <div class="col-sm text-left" id="xpValue">
                            @Html.EditorFor(m => m.Quantities)
                            @Html.ValidationMessageFor(m => m.Quantities)
                        </div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-sm text-sm-center text-md-right" id="xpName">
                            @Html.DisplayNameFor(m => m.IsLimitSupply)
                        </div>
                        <div class="col-1">

                        </div>
                        <div class="col-sm text-left" id="xpValue">
                            @Html.CheckBoxFor(m => m.IsLimitSupply)

                        </div>
                    </div>


                    <br />
                    <hr />
                    <br />

                    <div class="row justify-content-center">
                        <div class="col-auto justify-content-center text-center">
                            @Html.ActionLink("Cancel", "Index", new { id = Model.Id }, new { @class = "btn btn1 btn-light DispalyBoxWithMargin" })
                        </div>

                        <div class="col-1"></div>

                        <div class="col-auto justify-content-center text-center">
                            <input type="submit" value="Create" class="btn btn1 btn-light DispalyBoxWithMargin">
                        </div>

                    </div>
                    <br />
                }
            </div>

            <div class="col-1"></div>
        </div>
        <br />
        <br />
    }
}
