@using _5051.Backend;
@using _5051.Models.Enums;
@model _5051.Models.ApplicationUserViewModel
@{
    ViewBag.Title = "User Info";
}

<br />
<div class="row justify-content-center">

    <div class="col-1 "></div>
    <div class="col lightTransparentBox">
        <br />
        <div class="FontSizeLarge text-center">
            <span class="FontSizeLarger FontBold FontColorBLack">User Information</span>
        </div>
        <br />
    </div>
    <div class="col-1"></div>
</div>

<div class="row">
    <br />
    <br />
</div>

@{
    if (Model == null)
    {
        <div class="row justify-content-center">

            <div class="col-1 "></div>
            <div class="col lightTransparentBox">
                <br />
                <div class="FontSizeLarge text-center FontColorBlack">
                    No Information
                </div>
                <br />
            </div>
            <div class="col-1"></div>
        </div>
    }

    else
    {
        <div class="row justify-content-center">
            <div class="col-1 "></div>

            <div class="col lightTransparentBox">
                <br />
                <div class="row justify-content-start">

                    <div class="col">
                        <div class="row justify-content-center">
                            <div class="col-sm-2 lightTransparentBox DispalyBoxWithMargin">
                                <div class="row justify-content-center">
                                    <div class="AvatarBoxNormal align-self-sm-center" id="AvatarBox">
                                        <div class="AvatarCircle"></div>
                                        <img class="AvatarItemBase AvatarHairBack" src="@Model.Student.AvatarComposite.AvatarHairBackUri" />
                                        <img class="AvatarItemBase AvatarHead" src="@Model.Student.AvatarComposite.AvatarHeadUri" />
                                        <img class="AvatarItemBase AvatarShirt" src="@Model.Student.AvatarComposite.AvatarShirtShortUri" />
                                        <img class="AvatarItemBase AvatarExpression" src="@Model.Student.AvatarComposite.AvatarExpressionUri" />
                                        <img class="AvatarItemBase AvatarCheeks" src="@Model.Student.AvatarComposite.AvatarCheeksUri" />
                                        <img class="AvatarItemBase AvatarHairFront" src="@Model.Student.AvatarComposite.AvatarHairFrontUri" />
                                        <img class="AvatarItemBase AvatarAccessory" src="@Model.Student.AvatarComposite.AvatarAccessoryUri" />
                                    </div>
                                </div>
                                <div class="row justify-content-around">
                                    <span class="col FontSizeLarge text-center">
                                        @Model.Student.Name<br />
                                        <span class="FontSizeSmall">
                                            @{
                                                foreach (var item in Model.UserRole)
                                                {
                                                    <span>@item.GetDisplayName()&nbsp;&nbsp;</span>
                                                }
                                            }
                                        </span>
                                    </span>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <br />
                    <br />
                </div>

                <div class="row justify-content-center FontSizeMedium">
                    <div class="col text-center">
                        @{
                            var displayString = string.Empty;
                            _5051.Models.UserRoleEnum currentRole;

                            displayString = "User is ";
                            currentRole = _5051.Models.UserRoleEnum.StudentUser;
                            if (!Model.UserRole.Contains(currentRole))
                            {
                                displayString += "not ";
                            }
                            <span>@displayString a @currentRole.GetDisplayName()</span>
                            <br>
                            @Html.ActionLink("Toggle", "ToggleUser", "Support", routeValues: new { id = Model.Student.Id, item = (int)currentRole }, htmlAttributes: new { @class = "btn btn1 btn-light DispalyBoxWithMargin", id = "StudentToggleBtn" });

                            <br />
                            <br />
                            displayString = "User is ";
                            currentRole = _5051.Models.UserRoleEnum.TeacherUser;
                            if (!Model.UserRole.Contains(currentRole))
                            {
                                displayString += "not ";
                            }
                            <span>@displayString a @currentRole.GetDisplayName()</span>
                            <br>
                            @Html.ActionLink("Toggle", "ToggleUser", "Support", routeValues: new { id = Model.Student.Id, item = (int)currentRole }, htmlAttributes: new { @class = "btn btn1 btn-light DispalyBoxWithMargin", id = "TeacherToggleBtn" });

                            <br />
                            <br />
                            displayString = "User is ";
                            currentRole = _5051.Models.UserRoleEnum.SupportUser;
                            if (!Model.UserRole.Contains(currentRole))
                            {
                                displayString += "not ";
                            }
                            <span>@displayString a @currentRole.GetDisplayName()</span>
                            <br>
                            @Html.ActionLink("Toggle", "ToggleUser", "Support", routeValues: new { id = Model.Student.Id, item = (int)currentRole }, htmlAttributes: new { @class = "btn btn1 btn-light DispalyBoxWithMargin", id = "SupportToggleBtn" });


                            <br />
                            <br />
                            <span>Delete this user?</span>
                            <br>
                            @Html.ActionLink("Delete", "DeleteUser", "Support", routeValues: new { id = Model.Student.Id }, htmlAttributes: new { @class = "btn btn1 btn-light DispalyBoxWithMargin", id = "DeleteUserBtn" })

                            <br />
                            <br />

                            <span>Change this users password?</span>
                            <br>
                            @Html.ActionLink("Change Password", "ChangeUserPassword", "Support", routeValues: new { id = Model.Student.Id }, htmlAttributes: new { @class = "btn btn1 btn-light DispalyBoxWithMargin", id = "ChangeUserPasswordBtn" })
                        }
                    </div>
                </div>

                    <div class="row">
                        <br />
                        <br />
                    </div>

                </div>
                <div class="col-1 "></div>
            </div>

        <div class="row">
            <br />
            <br />
        </div>
    }
}