@model _5051.Models.StudentReportViewModel
@{
    ViewBag.Title = "Student Reports";

    var DblQuote = Convert.ToChar(34);
    var SingleQuote = Convert.ToChar(39);
    var DateRange = new List<String>();
    foreach (var item in Model.AttendanceList)
    {
        var myString = SingleQuote + item.Date.ToShortDateString() + SingleQuote;
        DateRange.Add(myString);
    }
}

<div class="text-center">
    <br />
    <h4>This is a student monthly report wireframe</h4>
    <br />
    <div>
        From @Model.DateStart.ToShortDateString()<br />
        To   @Model.DateEnd.ToShortDateString()<br />
    </div>
</div>
<br />

@if (Model.AttendanceList.Count == 0)
{
    <p>No Data of this Month</p>
}
else
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"></script>

    @*<div class="bg-white">
        <table class="table table-striped">
            <thead>
                <tr class="thead">
                    <th>Attendance Status</th>
                    <th>Days</th>
                    <th>Percentage</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Present</td>
                    <td>@Model.Stats.DaysPresent</td>
                    <td>@Model.Stats.PercPresent%</td>
                </tr>
                <tr>
                    <td>Absent Unexcused</td>
                    <td>@Model.Stats.DaysAbsentUnexcused</td>
                    <td>@Model.Stats.PercUnexcused%</td>
                </tr>
                <tr>
                    <td>Absent Excused</td>
                    <td>@Model.Stats.DaysAbsentExcused</td>
                    <td>@Model.Stats.PercExcused%</td>
                </tr>
                <tr>
                    <td>Total Days</td>
                    <td>@Model.Student.Attendance.Count</td>
                    <td>100%</td>
                </tr>
            </tbody>
        </table>
    </div>*@
    <br />
    <h3>All the data used to generate this report</h3>
    <div class="row">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>In</th>
                    <th>Out</th>
                    <th>Attended</th>
                    <th>Expected</th>
                    <th>Percentage Attended</th>
                    <th>Total Attended</th>
                    <th>Total Expected</th>
                    <th>AttendanceStatus</th>
                    <th>CheckInStatus</th>
                    <th>CheckOutStatus</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model.AttendanceList)
                    {
                        <tr>
                            <td>@item.Date.ToShortDateString()</td>
                            <td>@item.TimeIn.ToString("hh:mm")</td>
                            <td>@item.TimeOut.ToString("hh:mm")</td>
                            <td>@string.Format("{0:%h}h {0:%m}m", item.HoursAttended)</td>
                            <td>@string.Format("{0:%h}h {0:%m}m", item.HoursExpected)</td>
                            <td>@item.PercentAttended</td>
                            <td>@string.Format("{0:%d}d {0:%h}h {0:%m}m", item.TotalHours)</td>
                            <td>@string.Format("{0:%d}d {0:%h}h {0:%m}m", item.TotalHoursExpected)</td>
                            <td>@item.AttendanceStatus.ToString()</td>
                            <td>@item.CheckInStatus.ToString()</td>
                            <td>@item.CheckOutStatus.ToString()</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="row justify-content-lg-center">
        <canvas id="accumulativeChart" style="width: 100%"></canvas>
        <script>
        var ctx = document.getElementById("accumulativeChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay == true).ToList().Select(m => m.Date.ToString("dd")).ToArray())],

                datasets: [{
                    label: 'Attended',
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.5)',
                    ],
                    data: [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay == true).ToList().Select(m => m.TotalHours.TotalMinutes).ToArray())],

                    borderWidth: 1
                }, {
                    label: 'Expected',
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                    ],
                    data: [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay == true).ToList().Select(m => m.TotalHoursExpected.TotalMinutes).ToArray())],

                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    fontSize: 24,
                    text: 'Cumulative Attended Hours'
                },
                responsive: false,
                scales: {
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Date'
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        scaleLabel: {
                            display: true,
                            labelString: '# of Cummulative Hours'
                        }
                    }]
                },
            }
        });

        </script>
    </div>
    <div class="row">
        @{
            <div class="col-10 CalendarBox">

                <div class="row">
                    <h3>@Model.DateStart.ToString("MMMM")</h3>
                    <br />
                </div>

                <div class="row text-center">
                    <table class="table table-bordered table-fit" style="width: 100%; table-layout: fixed">
                        <thead>
                            <tr class="text-center">
                                <th class="text-center">Mo</th>
                                <th class="text-center">Tu</th>
                                <th class="text-center">We</th>
                                <th class="text-center">Th</th>
                                <th class="text-center">Fr</th>
                                <th class="text-center">Sa</th>
                                <th class="text-center">Su</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int ColumnSpaceCount = 0;
                                var ColumnSpace = "<td/>";
                                foreach (var item in Model.AttendanceList)
                                {
                                    var newRow = "<td>";
                                    var endRow = "</td>";

                                    if (item.Date.DayOfWeek == DayOfWeek.Monday)
                                    {
                                        newRow = "<tr><td>";
                                    }

                                    if (item.Date.DayOfWeek == DayOfWeek.Sunday)
                                    {
                                        endRow = "</td></tr>";
                                    }

                                    @Html.Raw(newRow)

                                    if (item.Date.Day == 1)
                                    {
                                        // Catch up the number of columns, day of week 0 is sunday, so columns 1 - 6 + 0
                                        // Don't include the column to show, so just the previous columns
                                        DayOfWeek today = item.Date.DayOfWeek;
                                        switch (today)
                                        {
                                            case DayOfWeek.Monday:
                                                //nothing
                                                ColumnSpaceCount = 0;
                                                break;

                                            case DayOfWeek.Tuesday:
                                                ColumnSpaceCount = 1;
                                                break;

                                            case DayOfWeek.Wednesday:
                                                ColumnSpaceCount = 2;
                                                break;

                                            case DayOfWeek.Thursday:
                                                ColumnSpaceCount = 3;
                                                break;

                                            case DayOfWeek.Friday:
                                                ColumnSpaceCount = 4;
                                                break;

                                            case DayOfWeek.Saturday:
                                                ColumnSpaceCount = 5;
                                                break;

                                            case DayOfWeek.Sunday:
                                                ColumnSpaceCount = 6;
                                                break;
                                        }
                                        for (var i = 0; i < ColumnSpaceCount; i++)
                                        {
                                            @Html.Raw(ColumnSpace)
                                        }
                                    }

                                    // Output this date
                                    <div>
                                        @{
                                            //if it is not a school day, just display date
                                            if (item.IsSchoolDay == false)
                                            {

                                                @item.Date.Day.ToString()

                                            }
                                            //if not attended fully, display the date and a progress bar
                                            else if (item.PercentAttended < 100)
                                            {
                                                <div class="btn btn-block" href="#" title="In: @item.TimeIn.ToString("hh:mm")   Out: @item.TimeOut.ToString("hh:mm")">
                                                    @item.Date.Day.ToString()
                                                    <div class="progress" style="margin-top:12%">
                                                        <div class="progress-bar" role="progressbar" style="width: @(item.PercentAttended )%" aria-valuenow="@item.PercentAttended * 100" aria-valuemin="0" aria-valuemax="100">@(item.PercentAttended )%</div>
                                                    </div>

                                                    <div>
                                                        @item.HoursAttended.TotalMinutes min / @item.HoursExpected.TotalMinutes min
                                                    </div>
                                                </div>

                                            }
                                            //if fully attended, display the date and a check mark
                                            else
                                            {
                                                @item.Date.Day.ToString()
                                                <div class="btn btn-block" href="#" title="In: @item.TimeIn.ToString("hh:mm")   Out: @item.TimeOut.ToString("hh:mm")">
                                                    <img src="~/Content/img/CheckMark.png" style="width: 50%" />
                                                </div>


                                            }


                                        }

                                    </div>
                                    @Html.Raw(endRow)
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }


    </div>


    @*<br />
        <div class="row justify-content-lg-center">
            <div class="col-3">
                <canvas id="pieChart" width="300" height="300"></canvas>
                <script>
                var ctx = document.getElementById("pieChart").getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ["Present", "Absent Excused", "Absent Unexcused"],
                        datasets: [{
                            data: [@Model.DaysPresent, @Model.DaysAbsentExcused, @Model.DaysAbsentUnexcused],
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 159, 64, 0.2)',
                                'rgba(255, 99, 132, 0.2)',
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 159, 64, 1)',
                                'rgba(255, 99, 132, 1)',
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            fontSize: 20,
                            text: 'Present vs Absent'
                        },
                        responsive: false,
                    }
                });

                </script>
            </div>
            <div class="col-3">
                <canvas id="pieChart4" width="300" height="300"></canvas>
                <script>
                var ctx = document.getElementById("pieChart4").getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ["Attended Hours", "Missing Hours"],
                        datasets: [{
                            data: [@Model.TotalHoursAttended, @Model.TotalHoursMissing],
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 99, 132, 0.2)',
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 99, 132, 1)',
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            fontSize: 20,
                            text: 'Attended Hours vs Missing Hours'
                        },
                        responsive: false,
                    }
                });

                </script>
            </div>
            <div class="col-3">
                <canvas id="pieChart2" width="300" height="300"></canvas>
                <script>
                var ctx = document.getElementById("pieChart2").getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ["On Time", "Late"],
                        datasets: [{
                            data: [@Model.DaysOnTime, @Model.DaysLate],
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 99, 132, 0.2)',
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 99, 132, 1)',
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            fontSize: 20,
                            text: 'On Time vs Late'
                        },
                        responsive: false,
                    }
                });

                </script>
            </div>
            <div class="col-3">
                <canvas id="pieChart3" width="300" height="300"></canvas>
                <script>
                var ctx = document.getElementById("pieChart3").getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ["Stayed", "Left Early"],
                        datasets: [{
                            data: [@Model.DaysStayed, @Model.DaysLeftEarly],
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 99, 132, 0.2)',
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 99, 132, 1)',
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            fontSize: 20,
                            text: 'Stayed vs Left Early'
                        },
                        responsive: false,
                    }
                });

                </script>

            </div>

        </div>
        <br />*@
}
<br />
<br />
<br />
<br />
<br />
<br />

<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

<br />
<br />
<br />
<br />
<br />
<br />