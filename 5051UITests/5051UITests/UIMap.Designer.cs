// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _5051UITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LoginHappy
        /// </summary>
        public void LoginHappy()
        {
            #region Variable Declarations
            WinList uIDesktopList = this.UIProgramManagerWindow.UIFolderViewWindow.UIDesktopList;
            WinPane uIKioskAttendanceStarGPane = this.UIKioskAttendanceStarGWindow.UIKioskAttendanceStarGPane;
            #endregion

            // Click 'Desktop' list box
            Mouse.Click(uIDesktopList, new Point(978, 237));

            // Click 'Desktop' list box
            Mouse.Click(uIDesktopList, new Point(858, 642));

            // Click 'Kiosk - AttendanceStar - Google Chrome' pane
            Mouse.Click(uIKioskAttendanceStarGPane, new Point(739, 547));

            // Click 'Desktop' list box
            Mouse.Click(uIDesktopList, new Point(1325, 734));
        }
        
        /// <summary>
        /// LogoutSad
        /// </summary>
        public void LogoutSad()
        {
            #region Variable Declarations
            WinPane uIKioskAttendanceStarGPane = this.UIKioskAttendanceStarGWindow.UIKioskAttendanceStarGPane;
            WinCustom uIKioskAttendanceStarGCustom = this.UIKioskAttendanceStarGWindow.UIChromeLegacyWindowDocument.UIKioskAttendanceStarGCustom;
            WinCustom uIKioskAttendanceStarGCustom1 = this.UIKioskAttendanceStarGWindow.UIChromeLegacyWindowDocument1.UIKioskAttendanceStarGCustom;
            #endregion

            // Click 'Kiosk - AttendanceStar - Google Chrome' pane
            Mouse.Click(uIKioskAttendanceStarGPane, new Point(1251, 420));

            // Click 'Kiosk - AttendanceStar - Google Chrome' custom control
            Mouse.Click(uIKioskAttendanceStarGCustom, new Point(417, 429));

            // Click 'Kiosk - AttendanceStar - Google Chrome' custom control
            Mouse.Click(uIKioskAttendanceStarGCustom, new Point(507, 519));

            // Click 'Kiosk - AttendanceStar - Google Chrome' custom control
            Mouse.Click(uIKioskAttendanceStarGCustom1, new Point(85, 281));
        }
        
        #region Properties
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UIKioskAttendanceStarGWindow UIKioskAttendanceStarGWindow
        {
            get
            {
                if ((this.mUIKioskAttendanceStarGWindow == null))
                {
                    this.mUIKioskAttendanceStarGWindow = new UIKioskAttendanceStarGWindow();
                }
                return this.mUIKioskAttendanceStarGWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UIKioskAttendanceStarGWindow mUIKioskAttendanceStarGWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinList UIDesktopList
        {
            get
            {
                if ((this.mUIDesktopList == null))
                {
                    this.mUIDesktopList = new WinList(this);
                    #region Search Criteria
                    this.mUIDesktopList.SearchProperties[WinList.PropertyNames.Name] = "Desktop";
                    this.mUIDesktopList.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIDesktopList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIDesktopList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIKioskAttendanceStarGWindow : WinWindow
    {
        
        public UIKioskAttendanceStarGWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Kiosk - AttendanceStar - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Kiosk - AttendanceStar - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinPane UIKioskAttendanceStarGPane
        {
            get
            {
                if ((this.mUIKioskAttendanceStarGPane == null))
                {
                    this.mUIKioskAttendanceStarGPane = new WinPane(this);
                    #region Search Criteria
                    this.mUIKioskAttendanceStarGPane.SearchProperties[WinControl.PropertyNames.Name] = "Kiosk - AttendanceStar - Google Chrome";
                    this.mUIKioskAttendanceStarGPane.WindowTitles.Add("Kiosk - AttendanceStar - Google Chrome");
                    #endregion
                }
                return this.mUIKioskAttendanceStarGPane;
            }
        }
        
        public UIChromeLegacyWindowDocument UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new UIChromeLegacyWindowDocument(this);
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        
        public UIChromeLegacyWindowDocument1 UIChromeLegacyWindowDocument1
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument1 == null))
                {
                    this.mUIChromeLegacyWindowDocument1 = new UIChromeLegacyWindowDocument1(this);
                }
                return this.mUIChromeLegacyWindowDocument1;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUIKioskAttendanceStarGPane;
        
        private UIChromeLegacyWindowDocument mUIChromeLegacyWindowDocument;
        
        private UIChromeLegacyWindowDocument1 mUIChromeLegacyWindowDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIChromeLegacyWindowDocument : WinControl
    {
        
        public UIChromeLegacyWindowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Kiosk - AttendanceStar";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Kiosk - AttendanceStar - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinCustom UIKioskAttendanceStarGCustom
        {
            get
            {
                if ((this.mUIKioskAttendanceStarGCustom == null))
                {
                    this.mUIKioskAttendanceStarGCustom = new WinCustom(this);
                    #region Search Criteria
                    this.mUIKioskAttendanceStarGCustom.SearchProperties["Instance"] = "3";
                    this.mUIKioskAttendanceStarGCustom.WindowTitles.Add("Kiosk - AttendanceStar - Google Chrome");
                    #endregion
                }
                return this.mUIKioskAttendanceStarGCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIKioskAttendanceStarGCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIChromeLegacyWindowDocument1 : WinControl
    {
        
        public UIChromeLegacyWindowDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Kiosk - AttendanceStar";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Kiosk - AttendanceStar - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinCustom UIKioskAttendanceStarGCustom
        {
            get
            {
                if ((this.mUIKioskAttendanceStarGCustom == null))
                {
                    this.mUIKioskAttendanceStarGCustom = new WinCustom(this);
                    #region Search Criteria
                    this.mUIKioskAttendanceStarGCustom.SearchProperties["Instance"] = "6";
                    this.mUIKioskAttendanceStarGCustom.WindowTitles.Add("Kiosk - AttendanceStar - Google Chrome");
                    #endregion
                }
                return this.mUIKioskAttendanceStarGCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIKioskAttendanceStarGCustom;
        #endregion
    }
}
